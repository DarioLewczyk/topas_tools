#Authorship{{{
'''
topas_refinement function is inspired by Monty Cosby's code. 

The class was made by Dario Lewczyk
'''
#}}}
#Inputs{{{
import os, subprocess
import shutil
import sys
import pandas as pd
import pickle 
import pandas as pd
import matplotlib.pyplot as plt 
from tqdm import tqdm
#}}}
#function to send inps to topas{{{
def topas_refinement(working_directory = os.getcwd(), del_out = True):
    os.chdir(working_directory)#Moves us into the working directory. Default value is to be the original directory. 
    TOPAS6_dir = "C:\\TOPAS6" #This is where TOPAS is
    '''
    This will make an output file for all of the files generated by this code. 
    '''
    output_dir = 'TOPAS_Output'
    if os.path.exists(output_dir):
        pass
    else: 
        os.mkdir(output_dir)
    os.chdir(output_dir) 
    output_dir = os.getcwd() #This redefines the output directory to the new output folder. 
    os.chdir(working_directory)#changes us back to the working directory to start looping. 
    filenames = []
    files = os.listdir()
    for f in files:
        if f.endswith('.inp'): 
            filenames.append(f) 
    with tqdm(total=len(filenames)) as pbar:
        for i, inp_file in enumerate(filenames):  
            refine_cmd = 'tc '+working_directory+'\\' #This is the refinement command for TOPAS
            os.chdir(TOPAS6_dir)
            subprocess.call(refine_cmd+inp_file) #This is telling TOPAS we want to refine. 
            os.chdir(working_directory) 
            pbar.update(1)
        dir_contents = os.listdir() 
        for i, f in enumerate(dir_contents):
            if f.endswith('.xy'): 
                os.chdir(output_dir)#checks to see if the file already exists. 
                for i2, f2 in enumerate(os.listdir()):
                    if f == f2:
                        os.remove(f2) 
                os.chdir(working_directory)
                
                shutil.move(f,output_dir)#This moves the newly created .xy files to the output folder. 
            if del_out == True: 
                if f.endswith('.out'):
                    os.remove(f)


#}}}
